import random

import colorama
from colorama import Fore, Style

colorama.init()


class Fishing:
    def __init__(self, fish_rod: str, fish_count: int, fish_left: int, worm_left: int, money: int,
                 colored_fish_list: list, caught_fish: list, type_worm: str, level: int, cash: int, pie: int):
        self.fish_rod = fish_rod
        self.fish_left: int = fish_left
        self.worm_left = worm_left
        self.money_in_wallet = money
        self.colored_fish_list = colored_fish_list
        self.type_worm = type_worm
        self.level = level
        self.cash = cash
        self.pie = pie
        if not isinstance(caught_fish, list):
            print(f"–í–Ω–∏–º–∞–Ω–∏–µ! caught_fish –±—ã–ª {type(caught_fish)}, –∑–∞–º–µ–Ω—è—é –Ω–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
            caught_fish = []
        self.fish_count = int(fish_count) \
            if isinstance(fish_count, (int, str)) and str(fish_count).isdigit() \
            else 0

        self.caught_fish = caught_fish  # —Å–ø–∏—Å–æ–∫ –ø–æ–π–º–∞–Ω–æ–π —Ä—ã–±—ã
        self.worm_wrong_enter = 0
        self.qualit_worm = 0

    def list_activity(self):
        self.activism = {1: ("–ü–µ—Ä–µ–∫—É—Å–∏—Ç—å –±—É–¥–µ—Ä–±—Ä–æ–¥–æ–º", self.dine),
                         2: ("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –¥–∞–ª—å", self.look_distance),
                         3: ("–õ—é–±–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏—Ä–æ–¥–æ–π", self.admire),
                         4: ("–õ–æ–≤–∏—Ç—å —Ä—ã–±—É", self.rand_qual_worms),
                         5: ("–ù–∏—á–µ–≥–æ", self.nothing),
                         6: ("–£–π—Ç–∏ –¥–æ–º–æ–π", self.exit_)
                         }

    def activation(self):
        self.list_activity()
        for key, (desc, _) in self.activism.items():
            print(f"{Fore.LIGHTCYAN_EX}{key}{Style.RESET_ALL}. {desc}")

        self.activ_funk()

    def activ_funk(self):
        try:
            self.choice1 = int(input("–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å(1-6)? "))

            if self.choice1 in self.activism:
                activism = self.activism[self.choice1][1]
                activism()
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ :)")
                self.activ_funk()
        except ValueError:
            print("–û–π, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (1-6)")
            self.activ_funk()

    def dine(self):
        print(f"{Fore.YELLOW}–¢—ã –ø–æ–¥–∫—Ä–µ–ø–∏–ª—Å—è!{Style.RESET_ALL}")
        self.activ_funk()

    def look_distance(self):
        print(f"{Fore.YELLOW}–í –¥–∞–ª–∏ —Ç—ã –≤–∏–¥–∏—à—å –∫–∞–∫ –ª–µ—Ç–∞—é—Ç –ø—Ç–∏—Ü—ã –∏ —Ç–µ–±–µ\n"
              f"–∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –±—ã –º–æ–≥ —Å—Ç–∞—Ç—å –æ—Ä–Ω–∏—Ç–æ–ª–æ–≥–æ–º!{Style.RESET_ALL}")
        self.activ_funk()

    def admire(self):
        print(f"{Fore.YELLOW}–°–µ–≥–æ–¥–Ω—è –ø–æ—Ç—Ä—è—Å–∞—é—â–∞—è –ø–æ–≥–æ–¥–∫–∞!üåªüåû{Style.RESET_ALL}")
        self.activ_funk()

    def nothing(self):
        print("–•–æ—Ä–æ—à–æ!")
        exit()

    def rand_qual_worms(self):
        worms_rand = random.randint(1, 10)
        self.qualit_worm = worms_rand
        self.worm_left = worms_rand
        print(f"–°–µ–≥–æ–¥–Ω—è —É —Ç–µ–±—è —Å —Å–æ–±–æ–π {Fore.BLUE}{self.qualit_worm}{Style.RESET_ALL} —á–µ—Ä–≤—å(-–µ–π)")
        print(self.fish_rod)
        if self.type_worm == "A-—á–µ—Ä–≤—è—á–æ–∫":
            color = Fore.GREEN
        elif self.type_worm == "B-—á–µ—Ä–≤—è—á–æ–∫":
            color = Fore.BLUE
        elif self.type_worm == "C-—á–µ—Ä–≤—è—á–æ–∫":
            color = Fore.CYAN
        elif self.type_worm == "D-—á–µ—Ä–≤—è—á–æ–∫":
            color = Fore.MAGENTA
        else:
            color = Fore.RED
        print(f"{color}{self.type_worm}{Style.RESET_ALL}")
        self.worm_()

    def worm_(self):
        while True:
            while self.worm_left > 0:
                # print(f"level: {self.level}")
                worm = input("–ù–∞–∂–∏–≤–∏—Ç—å —á–µ—Ä–≤—è –Ω–∞ –∫—Ä—é—á–æ–∫? ")
                if worm.lower() == '–¥–∞':
                    self.qualit_worm -= 1
                    self.worm_left = self.qualit_worm
                    throw_into = input("–ó–∞–∫–∏–Ω—É—Ç—å –ø—Ä–∏–º–∞–Ω–∫—É –≤ –ø—Ä—É–¥? ")
                    if throw_into.lower() == '–¥–∞':
                        lucky = random.randint(0, 100)
                        print(lucky)
                        if lucky >= 65:
                            print("–ñ–∞–ª—å, –Ω–∏—á–µ–≥–æ –Ω–µ –∫–ª—é—ë—Ç( ")
                            print(f"–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {Fore.BLUE}{self.worm_left}{Style.RESET_ALL} —á–µ—Ä–≤—å(-–µ–π)")
                            self.exit_()
                        else:
                            self.catch_fish_def()
                    elif throw_into.lower() == '–Ω–µ—Ç':
                        print("–ó–∞—á–µ–º —á–µ—Ä–≤—è —É–±–∏–ª??")
                        exit()
                    else:
                        print(f"{Fore.RED}(–Ω–∞–¥–æ –±—ã–ª–æ –¥–∞/–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å){Style.RESET_ALL}")
                        self.worm_()

                elif worm.lower() == '–Ω–µ—Ç':
                    print("–°—Ç—Ä–∞–Ω–Ω–æ..")
                    self.activ_funk()

                else:  # print(self.fish_rod)
                    print(f"–ü—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è!{Fore.RED}(–Ω–∞–¥–æ –±—ã–ª–æ –¥–∞/–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å){Style.RESET_ALL}")
                    self.worm_()

    def catch_fish_def(self):
        catch_fish = input("–í—ã—É–¥–∏—Ç—å —Ä—ã–±–∫—É? ")
        if catch_fish.lower() == '–¥–∞':
            fish = self.random_fish()
            if not isinstance(self.fish_left, int):
                print(f"–û—à–∏–±–∫–∞! fish_left —Å—Ç–∞–ª {type(self.fish_left)}: {self.fish_left}")
                self.fish_left = 0
            self.fish_count += 1

            self.fish_left += 1
            self.caught_fish.append(fish)
            print(self.caught_fish)
            self.cash += fish['price']
            print(f"–£ —Ç–µ–±—è —É–∂–µ: {Fore.BLUE}{str(self.fish_count)}{Style.RESET_ALL} —Ä—ã–±–∞ –∑–∞ –∏–≥—Ä—É")
            print(f"–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {Fore.BLUE}{self.worm_left}{Style.RESET_ALL} —á–µ—Ä–≤—å(-–µ–π)")
            self.level_()
            if self.level == 2:
                print(f"{Fore.GREEN}–ó–∞–≥–ª—è–Ω–∏ –∫ –¢–∞–º–∞—Ä–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —Ç–µ–±–µ —Å—Ç–∞–ª–æ –¥–æ—Å—Ç—É–ø–Ω–æ!{Style.RESET_ALL}")
            self.cooking(fish)

        elif catch_fish.lower() == "–Ω–µ—Ç":
            print("–†—ã–±–∫–∞ —É–π–¥–µ—Ç!")
            self.worm_wrong_enter += 1
            if self.worm_wrong_enter >= 2:
                print("....")
                print("–≠—Ö, —É–ø—É—Å—Ç–∏–ª...")
                self.exit_()
            else:
                self.catch_fish_def()

        else:
            print("\n–¢—ã —É–ø—É—Å—Ç–∏–ª —Ä—ã–±—É! –û–Ω–∞ —É–ø–ª—ã–ª–∞ –Ω–∞–≤—Å–µ–≥–¥–∞...")
            self.exit_()

    def level_(self):
        self.previous_level = self.level
        if self.fish_count == 0:
            self.level += 1
        else:
            self.level = self.fish_count // 5 + 1
        if self.previous_level < self.level:
            print(f"–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω!üí´\n{Fore.MAGENTA}LEVEL: {self.level}{Style.RESET_ALL}")

    def color_fish(self, fish, extra=False):
        if isinstance(fish, dict):
            if fish['price'] <= 150:
                color = Fore.GREEN
            elif 150 < fish['price'] <= 300:
                color = Fore.CYAN
            elif 300 < fish['price'] <= 600:
                color = Fore.BLUE
            elif 600 < fish['price'] <= 900:
                color = Fore.YELLOW
            elif 900 < fish['price'] <= 1800:
                color = Fore.MAGENTA
            else:
                color = Fore.RED

            result = f"{color}{fish['name']}{Style.RESET_ALL}"
            if extra:
                result += f"({fish['price']} —Ä—É–±)"
                return result

            return f"{color}{fish['name']}{Style.RESET_ALL}"
        elif isinstance(fish, str):
            return f"{Fore.CYAN}{fish}{Style.RESET_ALL}"
        else:
            return f"{Fore.WHITE}–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä—ã–±–∞{Style.RESET_ALL}"

    def cooking(self, fish):
        cook = input(f"–•–æ—á–µ—à—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å {self.color_fish(fish)} –Ω–∞ –∫–æ—Å—Ç—Ä–µ? (–¥–∞/–Ω–µ—Ç) ")
        if cook.lower() == "–¥–∞":
            self.process_cook(fish)

        elif cook.lower() == "–Ω–µ—Ç":
            print(f"–¢—ã –æ—Å—Ç–∞–≤–∏–ª {self.color_fish(fish)} —Å—ã—Ä–æ–π")
            self.exit_()
        else:
            print(f"–¢—ã —Å–ª–∏—à–∫–æ–º –≥–æ–ª–æ–¥–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å {Fore.RED}<–¥–∞> –∏–ª–∏ <–Ω–µ—Ç>{Style.RESET_ALL}")
            self.cooking(fish)

    def random_fish(self):
        fish_list = [
            {"name": "–ø–ª–æ—Ç–≤–∞", "price": 20},
            {"name": "–µ—Ä—Ö–æ–≤–∫–∞", "price": 30},
            {"name": "–±—ã—á–æ–∫", "price": 40},
            {"name": "–∫–∞—Ä–∞—Å–∏–∫", "price": 50},
            {"name": "–≥—É—Å—Ç–µ—Ä–∞", "price": 60},
            {"name": "–ª–µ—â", "price": 80},
            {"name": "—á–µ—Ö–æ–Ω—å", "price": 90},
            {"name": "–æ–∫—É–Ω—å", "price": 100},
            {"name": "–ª–∏–Ω—å", "price": 110},
            {"name": "—Ç–∏–ª–∞–ø–∏—è", "price": 120},
            {"name": "–∫–∞–º–±–∞–ª–∞", "price": 130},
            {"name": "–≥–æ–ª–∞–≤–ª—å", "price": 140},
            {"name": "—â—É–∫–∞", "price": 150},
            {"name": "—è–∑—å", "price": 160},
            {"name": "–Ω–∞–ª–∏–º", "price": 170},
            {"name": "—Å–∞—Ä–≥–∞–Ω", "price": 180},
            {"name": "—Å—É–¥–∞–∫", "price": 200},
            {"name": "—Ç–æ–ª—Å—Ç–æ–ª–æ–±–∏–∫", "price": 250},
            {"name": "–∫–∞—Ä–ø", "price": 300},
            {"name": "—Ñ–æ—Ä–µ–ª—å", "price": 400},
            {"name": "—Å–æ–º", "price": 500},
            {"name": "—É–≥–æ—Ä—å", "price": 600},
            {"name": "–æ—Å—ë—Ç—Ä", "price": 750},
            {"name": "–º–æ—Ä—Å–∫–æ–π –æ–∫—É–Ω—å", "price": 900},
            {"name": "—Ç—É–Ω–µ—Ü", "price": 1200},
            {"name": "–ª–æ—Å–æ—Å—å", "price": 1500},
            {"name": "–ø–∞–ª—Ç—É—Å", "price": 1800},
            {"name": "–º–µ—á-—Ä—ã–±–∞", "price": 2500},
            {"name": "–±–µ–ª—É–≥–∞", "price": 5000}
        ]
        self.lucky = random.randint(0, 1000)
        print(f"{self.lucky} {Fore.LIGHTBLACK_EX}standart{Style.RESET_ALL}")
        '''–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞—Ç—å
         –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–∞–Ω–∫—É –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞—Ö–æ–¥–∞
          (–ø—Ä–∏—à–µ–ª –¥–æ–º–æ–π –∏ —Ä–µ—à–∏–ª –æ–ø—è—Ç—å –Ω–∞ —Ä—ã–±–∞–ª–∫—É)'''

        # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —É–¥–æ—á–∫–∏
        if self.fish_rod == "–û–±—ã—á–Ω–∞—è —É–¥–æ—á–∫–∞":
            self.lucky -= 300
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}fish rod{Style.RESET_ALL}")

        elif self.fish_rod == "–ë–∞–º–±—É–∫–æ–≤–∞—è —É–¥–æ—á–∫–∞":
            self.lucky -= 100
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}fish rod{Style.RESET_ALL}")

        elif self.fish_rod == "–°–ø–∏–Ω–Ω–∏–Ω–≥ —É–¥–æ—á–∫–∞":
            self.lucky += 100
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}fish rod{Style.RESET_ALL}")

        else:
            self.lucky += 200
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}bait{Style.RESET_ALL}")

        if self.type_worm == "A-—á–µ—Ä–≤—è—á–æ–∫":
            self.lucky += 1
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}bait{Style.RESET_ALL}")
        elif self.type_worm == "B-—á–µ—Ä–≤—è—á–æ–∫":
            self.lucky += 10
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}bait{Style.RESET_ALL}")
        elif self.type_worm == "C-—á–µ—Ä–≤—è—á–æ–∫":
            self.lucky += 50
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}bait{Style.RESET_ALL}")
        elif self.type_worm == "D-—á–µ—Ä–≤—è—á–æ–∫":
            self.lucky += 75
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}bait{Style.RESET_ALL}")
        elif self.type_worm == "S-—á–µ—Ä–≤—è—á–æ–∫":
            self.lucky += 120
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}bait{Style.RESET_ALL}")
        else:
            print(f"{self.lucky} {Fore.LIGHTBLACK_EX}bait{Style.RESET_ALL}")

        # –ö–∞–∫–∞—è —Ä—ã–±–∫–∞ –º–æ–∂–µ—Ç –≤—ã–ª–æ–≤–∏—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É–¥–∞—á–∏ –∏ —É–¥–æ—á–∫–∏
        if self.lucky < 400:
            fish_list = fish_list[:12]
        elif self.lucky < 600:
            fish_list = fish_list[13:18]
        elif self.lucky < 700:
            fish_list = fish_list[19:21]
        elif self.lucky < 900:
            fish_list = fish_list[22:23]
        elif self.lucky < 999:
            fish_list = fish_list[24:26]
        else:
            print(self.lucky)
            fish_list = fish_list[27:28]

        if self.lucky < 0 or self.lucky == 0:
            print("–¢–≤–æ—è —É–¥–æ—á–∫–∞ —Å–ª–∏—à–∫–æ–º —Å–ª–∞–±–∞ –¥–ª—è —Ç–∞–∫–æ–π —Ä—ã–±–∫–∏!üò¢")
            if self.worm_left:
                self.worm_()
            else:
                print("–ß–µ—Ä–≤–µ–π –±–æ–ª—å—à–µ –Ω–µ—Ç!")
                self.exit_()
            # –í—ã–±–æ—Ä–∫–∞ —Ä—ã–±–∫–∏ –∏–∑ —Ç–æ–≥–æ —Ä–∞–¥–∏—É—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —É–¥–∞—á–µ–π –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ "–ø–ª—é—à–∫–∞–º–∏"
        random_fish = random.choice(fish_list)
        print(f"–í—ã –ø–æ–π–º–∞–ª–∏: {self.color_fish(random_fish)}!\n"
              f"–¶–µ–Ω–∞: {random_fish['price']} —Ä—É–±–ª–µ–π")
        return random_fish

    def process_cook(self, fish):
        for i in 'Cooking':
            print(f"{Fore.BLUE}{i}{Style.RESET_ALL}")
        print(f"{Fore.MAGENTA}–¢—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª{Style.RESET_ALL} {self.color_fish(fish)}")
        self.money_in_wallet -= fish['price']
        if fish in self.caught_fish:
            self.caught_fish.remove(fish)
        self.fish_left -= 1
        print(f"{Fore.BLACK}{self.caught_fish}{Style.RESET_ALL}")
        print(f"{Fore.MAGENTA}—É—Ö, –∞ —É—Ö–∞ –ø–æ–ª—É—á–∏–ª–∞—Å—å –æ—Ç–ª–∏—á–Ω–∞—è:)!{Style.RESET_ALL}")
        self.eat()

    def eat(self):
        write_eat = input("–Ω–∞–ø–∏—à–∏ <–∫—É—à–∞—Ç—å> ")
        if write_eat.lower() == "–∫—É—à–∞—Ç—å":
            print("–¢–µ–ø–µ—Ä—å —Ç—ã —Å—ã—Ç!")
            self.exit_()
        else:
            print(f"{Fore.RED}–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ{Style.RESET_ALL}")
            self.eat()

    def exit_(self):
        exit_choice = input("–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä—ã–±–∞–ª–∫—É? ")
        if exit_choice.lower() == '–¥–∞':
            if self.caught_fish != []:
                self.colored_fish_list = ', '.join([
                    self.color_fish(fish) for fish in self.caught_fish if
                    isinstance(fish, dict) and isinstance(self.caught_fish, list)
                ])
                print(
                    f"–°–µ–≥–æ–¥–Ω—è —Ç—ã –ø–æ–π–º–∞–ª:  {Fore.BLUE}{self.fish_count}{Style.RESET_ALL} —Ä—ã–±(—É)\n"
                    f"–í —Å–µ—Ç–∫–µ: {self.colored_fish_list}\n"
                    f"–° —Å–æ–±–æ–π –¥–æ–º–æ–π –Ω–µ—Å–µ—à—å: {Fore.BLUE}{self.fish_left}{Style.RESET_ALL} —Å—ã—Ä—ã—Ö(-—É—é) —Ä—ã–±(—É)\n"
                    f"–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å: {Fore.BLUE}{self.worm_left}{Style.RESET_ALL} —á–µ—Ä–≤—å(-–µ–π)\n"
                )

                self.random_encounter()
            else:
                print("–£ —Ç–µ–±—è –Ω–µ—Ç, —á—Ç–æ –Ω–µ—Å—Ç–∏ –¥–æ–º–æ–π.")
                self.print_home()
                self.call_home()
        elif exit_choice.lower() == "–Ω–µ—Ç":
            if self.worm_left == 0:
                print(f"{Fore.YELLOW}–£ —Ç–µ–±—è –±–æ–ª—å—à–µ –Ω–µ—Ç —Å–µ–≥–æ–¥–Ω—è —á–µ—Ä–≤–µ–π!{Style.RESET_ALL}")
                self.exit_()
            else:
                self.worm_()
        else:
            print(Fore.RED + "–Ω–∞–ø–∏—à–∏ –¥–∞/–Ω–µ—Ç" + Style.RESET_ALL)
            self.exit_()

    def random_encounter(self):
        encounter = random.randint(1, 2)
        if encounter == 1:
            print(f"–¢–µ–±–µ –ø–æ –ø—É—Ç–∏ –≤—Å—Ç–µ—Ä—Ç–∏–ª—Å—è {Fore.YELLOW}–ö–ª–∏–º{Style.RESET_ALL}!")

            def want_sell():
                message = input("–•–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å –µ–º—É —Ä—ã–±—É? ")
                if message.lower() == "–¥–∞":
                    self.print_money()
                elif message.lower() == "–Ω–µ—Ç":
                    print("–õ–∞–¥–Ω–æ, –ö–ª–∏–º —É—à—ë–ª. –ê —Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—à—å—Å—è –¥–æ–º–æ–π —Å —Ä—ã–±–∫–æ–π. –¢–µ–±–µ –Ω—É–∂–Ω–µ–µ!")
                    self.print_home()
                    self.call_home()
                else:
                    print("–û–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑...")
                    want_sell()

            want_sell()
        else:
            print("–ü–æ –ø—É—Ç–∏ —Ç—ã –Ω–∏–∫–æ–≥–æ –Ω–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª :(")
            self.money_in_wallet = self.cash
            self.cash = 0
            self.print_home()
            self.call_home()

    def sell_fish(self):
        quest_sell = input("–•–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å –Ω–∞ —Ä—ã–Ω–∫–µ —Ä—ã–±—É? ")
        if quest_sell.lower() == "–¥–∞":
            while self.caught_fish != []:
                self.print_money()
            if self.caught_fish == []:
                print(f"{Fore.LIGHTRED_EX}–£ —Ç–µ–±—è –Ω–µ—Ç—É —Ä—ã–±—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂—É!{Style.RESET_ALL}")
        elif quest_sell.lower() == "–Ω–µ—Ç":
            print("–•–æ—Ä–æ—à–æ, —Å–µ–≥–æ–¥–Ω—è –±—ã–ª –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å!")
            self.print_home()
            self.call_home()
        else:
            print("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ï—â—ë —Ä–∞–∑..")
            self.sell_fish()

    def print_money(self):
        print(
            f"–¢—ã –≤—ã—Ä—É—á–∏–ª —Å —Ä—ã–±–∞–ª–∫–∏ {Fore.BLUE}{self.cash}{Style.RESET_ALL} —Ä—É–±–ª–µ–π. \n–¢–≤–æ–π –º–µ—à–æ—á–µ–∫ –ø–æ–ª–æ–Ω –¥–µ–Ω–µ–≥üí∞!")
        self.money_in_wallet += self.cash
        self.cash = 0
        self.caught_fish.clear()
        self.print_home()
        self.call_home()

    def print_home(self):
        for i in 'Home':
            print(f"{Fore.BLUE}{i}{Style.RESET_ALL}  ")

    def call_home(self):
        home = AtHome(
            fish_rod=self.fish_rod,
            fish_count=self.fish_count,
            fish_left=self.fish_left,
            worm_left=self.worm_left,
            money_in_wallet=self.money_in_wallet,
            colored_fish_list=self.colored_fish_list,
            caught_fish=self.caught_fish,
            type_worm=self.type_worm,
            level=self.level,
            cash=self.cash,
            pie=self.pie
        )
        home.mes_you_home()
        home.activation()


class AtHome(Fishing):
    fridge = []

    def __init__(self, fish_rod, fish_count: int, fish_left: int, worm_left, money_in_wallet, colored_fish_list: list,
                 caught_fish: list, type_worm: str, level: int, cash: int, pie: int,
                 inventar=0, dog_met=False, dog_eat=False, new_act=0):
        super().__init__(fish_rod, fish_count, fish_left, worm_left, money_in_wallet, colored_fish_list, caught_fish,
                         type_worm,
                         level, cash, pie)
        self.inventar = inventar
        self.dog_met = dog_met
        self.dog_eat = dog_eat
        self.new_act = new_act
        self.action()

    def mes_you_home(self):
        print("–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –¥–æ–º–æ–π!")
        self.new_friend()

    def action(self):
        self.list_at_home = {
            1: ("–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", self.fridge_fun),
            2: ("–°–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä", self.tv),
            3: ("–°—Ç–∏—Ä–∞—Ç—å –æ–¥–µ–∂–¥—É", self.washing_clothes),
            4: ("–ò–¥—Ç–∏ —Å–ø–∞—Ç—å", self.good_night),
            5: ("–ó–∞–≤–∞—Ä–∏—Ç—å —á–∞—éüçµ", self.make_tea),
            6: ("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", self.see_fridge),
            7: ("–ü–æ–π—Ç–∏ –Ω–∞ —Ä—ã–±–∞–ª–∫—É", self.go_fishing),
            8: ("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∫–æ—à–µ–ª–µ–∫", self.look_wallet),
            9: ("–ü—Ä–æ–¥–∞—Ç—å —Ä—ã–±—É –Ω–∞ –±–∞–∑–∞—Ä–µ", self.sell_fish),
            10: ("–°—Ö–æ–¥–∏—Ç—å –Ω–∞ —è—Ä–º–∞—Ä–∫—É", self.go_fair),
        }
        if self.dog_met:
            self.list_at_home[11] = ("–ü–æ–∫–æ—Ä–º–∏—Ç—å –ø–µ—Å–∏–∫–∞", self.feed_dog)

    def activation(self):
        self.action()
        for key, (desc, _) in self.list_at_home.items():
            print(f"{Fore.LIGHTCYAN_EX}{key}{Style.RESET_ALL}. {desc}")

        self.activ_at_home()

    def activ_at_home(self):
        try:
            if self.dog_met:
                self.choice = int(input("\n–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å? (1-11) "))
            else:
                self.choice = int(input("\n–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å? (1-10) "))

            if self.choice in self.list_at_home:
                list_at_home = self.list_at_home[self.choice][1]
                list_at_home()
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ :)")
                self.activ_at_home()
        except ValueError:
            print("–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä!")
            self.activ_at_home()

    def fridge_fun(self):
        global fridge
        quest1 = int(input("–ü–æ–ª–æ–∂–∏—Ç—å –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫(1) –∏–ª–∏ –≤–∑—è—Ç—å –∏–∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞(2): "))
        if quest1 == 1:
            quest2 = int(input("–ü–æ–ª–æ–∂–∏—Ç—å –ø–∏—Ä–æ–≥(1) –∏–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å —Ä—ã–±—É(2): "))
            if quest2 == 2:
                if not self.caught_fish:
                    print("–£ —Ç–µ–±—è –Ω–µ—Ç—É —Ä—ã–±—ã!")
                    self.activation()
                else:
                    print(f"–¢—ã –ø–æ–ª–æ–∂–∏–ª —Ä—ã–±—É: ")
                    for fish in self.caught_fish:
                        print(f"\t{self.color_fish(fish)}")
                    self.fridge.extend(list(self.caught_fish))
                    self.color_fish(self.fridge)
                    self.caught_fish.clear()
                    self.activation()
            elif quest2 == 1:
                if self.pie == 0:
                    print("–£ —Ç–µ–±—è –Ω–µ—Ç—É –ø–∏—Ä–æ–≥–æ–≤! –°–¥–µ–ª–∞–π —Å–Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç")
                    self.activation()
                else:
                    print(f"–¢—ã –ø–æ–ª–æ–∂–∏–ª {self.pie} –ø–∏—Ä–æ–≥(-–∞/-–æ–≤)")
                    self.name_pie = "–ü–∏—Ä–æ–≥"
                    self.fridge.extend([self.name_pie] * self.pie)
                    self.pie = 0
                    self.activation()
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏ —á–∏—Å–ª–æ!")
                self.activation()
        elif quest1 == 2:
            if self.fridge:
                print("–í —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ: ")
                for fish in self.fridge:
                    print(f"\t{self.color_fish(fish)}")

                def take_fish():
                    user_input = 0
                    while self.fridge:
                        try:
                            user_input = input("–í–≤–µ–¥–∏ —Ä—ã–±–∫—É: ")
                            if not user_input:
                                print("–¢—ã –ø–µ—Ä–µ–¥—É–º–∞–ª?")
                                self.activation()
                            found_item = next(
                                (item for item in self.fridge if item['name'] == user_input), None)

                            if found_item:
                                self.fridge.remove(found_item)
                                self.caught_fish.append(found_item)
                                print(self.fridge)

                        except ValueError or TypeError:
                            print("–û–π! –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—ã–±–∫–∏!!")
                            take_fish()
                        if user_input == ' ':
                            self.activation()

                take_fish()

            else:
                print("–£ —Ç–µ–±—è –Ω–µ—Ç—É —Ä—ã–±—ã!")
                self.activ_at_home()

    def tv(self):
        print(
            f"{Fore.YELLOW}–¢–µ–ª–µ–≤–∏–∑–æ—Ä –≤–∫–ª—é—á–µ–Ω. –¢–≤–æ—è —Å–ø–∏–Ω–∞ –æ—Ç–¥—ã—Ö–∞–µ—Ç,\n–∏ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —Ç–≤–æ–∏ –Ω–æ–≥–∏ —Ç–∏—Ö–æ –≥—É–¥—è—Ç –æ—Ç –Ω–∞—Å—ã—â–µ–Ω–æ–≥–æ –¥–Ω—è...üëå‚ú®{Style.RESET_ALL}")
        self.random_visit()

    def washing_clothes(self):
        print(f"{Fore.YELLOW}–¢—ã —Å—Ç–∏—Ä–∞–µ—à—å –æ–¥–µ–∂–¥—É. –ß–∏—Å–ª–æ—Ç–∞ - –∑–∞–ª–æ–≥ –∑–¥–æ—Ä–æ–≤—å—è!ü´ß{Style.RESET_ALL}")
        self.activation()

    def good_night(self):
        print(
            f"{Fore.YELLOW}–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏! –ü—É—Å—Ç—å —Ç–µ–±–µ –ø—Ä–∏—Å–Ω–∏—Ç—Å—è —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è —Ä—ã–±–∫–∞üåû.\n---> –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.{Style.RESET_ALL}")
        exit()

    def check_tea(self):
        if self.inventar == 0:
            self.tea()
        else:
            self.make_tea()

    def see_fridge(self):
        if self.fridge:
            print("–¢–∞–º –ª–µ–∂–∏—Ç: ")

            def show_fish():
                for fish in self.fridge:
                    print(f"\t{self.color_fish(fish)}")
                self.activation()

            show_fish()
        else:
            print("–í —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ –ø—É—Å—Ç–æ ü™∞")

    def feed_dog(self):
        if not self.dog_eat:
            for i in "Feed":
                print(f"{Fore.MAGENTA}{i}{Style.RESET_ALL}")
            print(f"{Fore.GREEN}–ü–µ—Å–∏–∫ —Ç–µ–ø–µ—Ä—å —Å—ã—Ç! –ú–æ–ª–æ–¥–µ—Ü :){Style.RESET_ALL}")
            self.dog_eat = True
            self.activation()
        else:
            print(f"{Fore.CYAN}–¢—ã —É–∂–µ –∫–æ—Ä–º–∏–ª –µ–≥–æ —Ä–∞–Ω–µ–µ){Style.RESET_ALL}")
            self.activation()

    def go_fishing(self):
        fishing = Fishing(
            fish_rod=self.fish_rod,
            fish_count=self.fish_count,
            fish_left=self.fish_left,
            worm_left=self.worm_left,
            money=self.money_in_wallet,
            colored_fish_list=self.colored_fish_list,
            caught_fish=self.caught_fish,
            type_worm=self.type_worm,
            level=self.level,
            cash=self.cash,
            pie=self.pie
        )
        fishing.list_activity()
        fishing.activation()

    def look_wallet(self):
        if self.money_in_wallet > 0:
            print(f"–£ —Ç–µ–±—è –µ—Å—Ç—å {Fore.GREEN}{self.money_in_wallet}{Style.RESET_ALL} —Ä—É–±–ª–µ–π")
            self.activation()
        else:
            print(f"–£—Ö—Ç—ã —É —Ç–µ–±—è —Ü–µ–ª—ã—Ö {self.money_in_wallet} —Ä—É–±–ª–µ–π. –û–¥–Ω–∏ –º—É—Ö–∏!ü™∞ü§Ø")
            self.activation()

    def go_fair(self):
        fair = Fair(fish_rod=self.fish_rod,
                    type_worm=self.type_worm,
                    money_in_wallet=self.money_in_wallet,
                    fish_left=self.fish_left,
                    fish_count=self.fish_count,
                    worm_left=self.worm_left,
                    colored_fish_list=self.colored_fish_list,
                    caught_fish=self.caught_fish,
                    level=self.level,
                    cash=self.cash,
                    pie=self.pie)
        fair.message()

    def random_visit(self):
        visit = random.randint(0, 1)
        if visit == 0:
            self.activation()
        else:
            print(f"–í –≥–æ—Å—Ç–∏ –Ω–∞–≤–µ–¥–∞–ª—Å—è {Fore.YELLOW}–ö–ª–∏–º{Style.RESET_ALL}!")
            self.nardu_klim()

    def tea(self):
        mes = input("–£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ç—Ä–∞–≤—ã. –ü–æ–π–¥–µ—à—å –≤ –≥–æ—Ä—ã? ")
        if mes.lower() == '–¥–∞':
            for i in 'going...':
                print(f"{Fore.BLUE}{i}{Style.RESET_ALL}")
            mountains = Mountains(
                fish_rod=self.fish_rod,
                money_in_wallet=self.money_in_wallet,
                caught_fish=self.caught_fish,
                worm_left=self.worm_left,
                fish_left=self.fish_left,
                inventar=self.inventar,
                dog_met=self.dog_met,
                new_act=self.new_act,
                type_worm=self.type_worm,
                level=self.level,
                cash=self.cash,
                pie=self.pie
            )
            mountains.message()

        elif mes.lower() == '–Ω–µ—Ç':
            print("–•–æ—Ä–æ—à–æ, –Ω–µ –ø–æ–π–¥–µ–º")
            self.activation()
        else:
            print(f"{Fore.RED}–¥–∞/–Ω–µ—Ç{Style.RESET_ALL}")
            self.tea()

    def make_tea(self):
        if self.inventar > 0:
            recept = ("–†–µ—Ü–µ–ø—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –æ—Å–æ–±–æ–≥–æ —á–∞—è:\n"
                      "3. –ü–æ–∂–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ –∑–∞–∫–∏–ø–∏—Ç —á–∞–π–Ω–∏–∫\n"
                      "2. –ü–æ—Å—Ç–∞–≤–∏—Ç—å —á–∞–π–Ω–∏–∫ –Ω–∞ –æ–≥–æ–Ω—å –≤ –ø–µ—á–∏\n"
                      "1. –î–æ—Å—Ç–∞—Ç—å –∞—Ä–æ–º–∞—Ç–Ω—ã–µ —Ç—Ä–∞–≤—ã\n"
                      "4. –í—Å—ã–ø–∞—Ç—å –≥–æ—Ä—Å—Ç–æ–∫ —Ç—Ä–∞–≤")
            print(recept)
        else:
            self.tea()

        def numbers():
            enter_numbers = input("–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü—ã—Ñ—Ä: ")
            if enter_numbers == '1234':
                for tea in 'teaparty':
                    print(f"{Fore.BLUE}{tea}{Style.RESET_ALL}")
                self.inventar -= 1
                print("–ê—Ä–æ–º–∞—Ç —á–∞–π —Å–≤–æ–¥–∏—Ç —Ç–µ–±—è —Å —É–º–∞! –í–æ—Ç —á—Ç–æ –∑–Ω–∞—á–∏—Ç —á–∞–π —Å –≥–æ—Ä–Ω—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π..")
                print(f"–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å: {Fore.BLUE}{self.inventar}{Style.RESET_ALL} ")
                self.activation()
            else:
                print("–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë!")
                numbers()

        numbers()

    def nardu_klim(self):
        nardu = input("–•–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å —Å –Ω–∏–º –≤ –Ω–∞—Ä–¥—ã? ")
        if nardu.lower() == '–¥–∞':
            print("–í—ã –∏–≥—Ä–∞–µ—Ç–µ! –ö–ª–∏–º —è–≤–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å–µ—Ä—å–µ–∑–Ω–æ...")  # –º–± –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–≥—Ä—ã –≤ –Ω–∞—Ä–¥—ã
            exit()
        elif nardu.lower() == '–Ω–µ—Ç':
            print("–ö–ª–∏–º –Ω–µ–º–Ω–æ–≥–æ –∑–∞–≥—Ä—É—Å—Ç–∏–ª. –ù–æ –Ω–∞—á–∞–ª —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ –µ–≥–æ –≥–µ—Ä–æ–∏—á–µ—Å–∫–æ–º —Å–ø–∞—Å–µ–Ω–∏–∏ –∫–æ—Ä–∞–±–ª—è –≤ —à—Ç–æ—Ä–º!üö¢")
            exit()
        else:
            print(f"{Fore.RED}–¥–∞/–Ω–µ—Ç{Style.RESET_ALL}")
            self.nardu_klim()

    def new_friend(self):
        print(self.new_act)
        if self.dog_met and self.new_act != 1:
            self.new_act = 1
            print(
                f"{Fore.GREEN}–£ —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å –µ—Å—Ç—å –¥—Ä—É–≥!\n<–¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–æ –±–æ–ª—å—à–µ –¥–µ–π—Å—Ç–≤–∏–π –≤ –¥–æ–º–µ>{Style.RESET_ALL}")
            print(self.new_act)
            self.action()
            self.activation()
        else:
            self.action()
            self.activation()


class Mountains(AtHome):
    def __init__(self, fish_rod, fish_left: int, worm_left, money_in_wallet, caught_fish: list, type_worm: str,
                 level: int,
                 cash: int, pie: int,
                 inventar=0,
                 dog_met=False,
                 new_act=0):
        super().__init__(fish_rod, fish_left, worm_left, money_in_wallet, caught_fish, type_worm, level, cash, pie,
                         inventar, dog_met)
        self.max_length = 10
        self.qual_tea = 0
        self.dog_met = dog_met
        self.money = money_in_wallet

    def message(self):
        print(f"{Fore.GREEN}–í—ã –¥–æ–±—Ä–∞–ª–∏—Å—å –¥–æ –±–æ–≥–∞—Ç–æ–π –ø–æ–ª—è–Ω—ã{Style.RESET_ALL}")
        print(self.dog_met)
        self.for_dog()
        self.random_tea()

    def for_dog(self):
        if self.dog_met == False and random.randint(0, 1) == 1:
            self.dog_met = True
            print(f"{Fore.YELLOW}–í–∞–º –≤—Å—Ç—Ä–µ—Ç–∏–ª—Å—è –æ–¥–∏–Ω–æ–∫–∏–π –ø–µ—Å–∏–∫!{Style.RESET_ALL}")
            name = input("–ö–∞–∫ –Ω–∞–∑–æ–≤–µ—à—å? ")
            print(f"–£—Ö—Ç—ã! –¢–µ–ø–µ—Ä—å {Fore.YELLOW}{name}{Style.RESET_ALL} –±—É–¥–µ—Ç —Ç–≤–æ–∏–º –≤–µ—Ä–Ω—ã–º –¥—Ä—É–≥–æ–º")
            return self.dog_met == True

    def trade(self):
        random_trader = random.randint(0, 1)
        if random_trader == 0:
            self.return_home()
        else:
            print(f"{Fore.YELLOW}–¢–µ–±–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª—Å—è —Ç–æ—Ä–≥–æ–≤–µ—Ü —É–¥–æ—á–∫–∞–º–∏!{Style.RESET_ALL}")

            def want():
                print(self.money)
                yes_no = input("–•–æ—á–µ—à—å –∫—É–ø–∏—Ç—å —É –Ω–µ–≥–æ —á—Ç–æ-—Ç–æ?(–¥–∞/–Ω–µ—Ç) ")
                if yes_no.lower() == '–¥–∞':
                    self.fish_rod_list = {
                        1: ("–ë–∞–º–±—É–∫–æ–≤–∞—è —É–¥–æ—á–∫–∞", 1000),
                        2: ("–°–ø–∏–Ω–Ω–∏–Ω–≥ —É–¥–æ—á–∫–∞", 2500),
                        3: ("–ö–∞—Ä–ø–æ–≤–∞—è —É–¥–æ—á–∫–∞", 4000)
                    }
                    for key, (name, price) in self.fish_rod_list.items():
                        print(f"{key}. {name} - {price} —Ä—É–±.")

                    def which_f():
                        try:
                            buy = int(input("–ö–∞–∫—É—é –∫—É–ø–∏—à—å? (–≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä): "))
                            if buy in self.fish_rod_list:
                                name, price = self.fish_rod_list[buy]
                                if int(self.money) < price:
                                    print(f"–¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {price - self.money} —Ä—É–±–ª–µ–π!")
                                    self.return_home()
                                else:
                                    self.money -= price
                                    self.fish_rod = name  # –¢–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —É–¥–æ—á–∫—É
                                    print(f"–¢—ã –∫—É–ø–∏–ª {name}! –£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {self.money} —Ä—É–±.")
                                    self.return_home()
                            else:
                                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!")
                                which_f()
                        except ValueError:
                            print("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ")
                            which_f()

                    which_f()

                elif yes_no.lower() == "–Ω–µ—Ç":
                    self.return_home()
                else:
                    print("–û–ô, –≤–≤–µ–¥–∏ –¥–∞/–Ω–µ—Ç!")
                    want()

            want()

    def collect_tea(self):
        self.random_tea()
        self.max_length = 10

    def random_tea(self):
        self.qual_tea = random.randint(1, 20)
        print(f"–ù–∞ –ø–æ–ª—è–Ω–µ —Å–µ–≥–æ–¥–Ω—è —Ç—Ä–∞–≤ –Ω–∞ {self.qual_tea} –ø—É—á–∫–æ–≤(-–æ–∫)")
        self.skolko_tea()

    def skolko_tea(self):
        while self.inventar < self.max_length and self.qual_tea > 0:
            try:
                user_collect = int(
                    input(f"–°–∫–æ–ª—å–∫–æ —Å–æ–±–µ—Ä–µ—à—å? (–î–æ—Å—Ç—É–ø–Ω–æ: {self.qual_tea}, –ú–µ—Å—Ç–æ: {self.max_length - self.inventar}) "))
                if user_collect + self.inventar > self.max_length:
                    print(
                        f"{Fore.RED}–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ —Ä—é–∫–∑–∞–∫–µ!{Style.RESET_ALL} –ú–æ–∂–µ—à—å –≤–∑—è—Ç—å —Ç–æ–ª—å–∫–æ {self.max_length - self.inventar} –ø—É—á–∫–æ–≤.")
                elif user_collect > self.qual_tea:
                    print(f"{Fore.RED}–ù–∞ –ø–æ–ª—è–Ω–µ —Å—Ç–æ–ª—å–∫–æ –Ω–µ—Ç!{Style.RESET_ALL} –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ {self.qual_tea} –ø—É—á–∫–æ–≤.")
                elif user_collect == 0:
                    self.trade()
                else:
                    self.inventar += user_collect
                    self.qual_tea -= user_collect
                    print(
                        f"–¢—ã —Å–æ–±—Ä–∞–ª {Fore.GREEN}{user_collect}{Style.RESET_ALL} –ø—É—á–∫–æ–≤. –í —Ä—é–∫–∑–∞–∫–µ: {Fore.BLUE}{self.inventar}{Style.RESET_ALL}.")
            except ValueError:
                print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")

        if self.inventar == self.max_length:
            print("–†—é–∫–∑–∞–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω!")
        elif self.qual_tea == 0:
            print("–ù–∞ –ø–æ–ª—è–Ω–µ –±–æ–ª—å—à–µ –Ω–µ—Ç —Ç—Ä–∞–≤!")

        self.trade()

    def return_home(self):
        print(self.dog_met)
        for i in "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –¥–æ–º–æ–π...":
            print(f"{Fore.CYAN}{i}{Style.RESET_ALL}", end='', flush=True)
        print()
        home = AtHome(
            fish_rod=self.fish_rod,
            fish_count=self.fish_count,
            fish_left=self.fish_left,
            worm_left=self.worm_left,
            money_in_wallet=self.money_in_wallet,
            colored_fish_list=self.colored_fish_list,
            caught_fish=self.caught_fish,
            inventar=self.inventar,
            dog_met=self.dog_met,
            type_worm=self.type_worm,
            level=self.level,
            cash=self.cash,
            pie=self.pie
        )
        home.mes_you_home()
        home.activation()


class Fair(Fishing):
    dialog = 0
    pozghe = 0
    first_meet = False

    def __init__(self, fish_rod: str, fish_count: int, fish_left: int, worm_left: int, money_in_wallet: int,
                 colored_fish_list: list, caught_fish: list, type_worm: str, level: int, cash: int, pie: int):
        super().__init__(fish_rod, fish_count, fish_left, worm_left, money_in_wallet, colored_fish_list, caught_fish,
                         type_worm, level, cash, pie)
        self.pie = pie

    def message(self):
        print(f"{Fore.GREEN}–¢—ã –¥–æ–±—Ä–∞–ª—Å—è –¥–æ —è—Ä–º–∞—Ä–∫–∏!{Style.RESET_ALL}")
        self.activity()

    def activity(self):
        self.list_activ = {
            1: ("–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –¢–∞–º–∞—Ä–æ–π –ò–≥–Ω–∞—Ç—å–µ–≤–Ω–æ–π", self.run_tamara),
            2: ("–ö—É–ø–∏—Ç—å –Ω–æ–≤—É—é –ø—Ä–∏–º–∞–Ω–∫—É —É –°—Ç–µ–ø–∞–Ω–æ–≤–∏—á–∞", self.buy_bait),
            3: ("–ö—É–ø–∏—Ç—å –ª–æ–¥–∫—É —É –ö–∞—Ä—ã—á–∞", self.buy_boat),
            4: ("–ö—É–ø–∏—Ç—å –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö —É —Ñ–µ—Ä–º–µ—Ä–∞ –í–∏–∫—Ç–æ—Ä–∞", self.buy_animals),
            5: ("–í–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π", self.return_home)
        }
        for key, (desc, _) in self.list_activ.items():
            print(f"{Fore.LIGHTCYAN_EX}{key}{Style.RESET_ALL}. {desc}")
        self.choose_action()

    def choose_action(self):
        try:
            self.choice = int(input("\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ: "))
            if self.choice in self.list_activ:
                list_activ = self.list_activ[self.choice][1]
                list_activ()
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ :)")
                self.activity()
        except ValueError:
            print(f"{Fore.RED}–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä!{Style.RESET_ALL}")
            self.choose_action()

    def talk_with_Tamara(self, character, text):
        border = "‚îÄ" * (len(text) + 12)
        print(f"‚îå{border}‚îê")
        print(f"| {character}: {text} |")
        print(f"‚îî{border}‚îò")

    def run_tamara(self):
        global dialog, pozghe, first_meet
        self.fish_ = 0
        if not self.first_meet:
            self.talk_with_Tamara("üêü –†—ã–±–∞–∫", "–°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —è—Ä–º–∞—Ä–∫–∏!")
            self.talk_with_Tamara("üë©‚Äçü¶∞ –¢–∞–º–∞—Ä–∞", "–•–µ-—Ö–µ! –†—ã–±–∞–∫, –±–µ—Ä–µ–≥–∏ –∫–æ—Å—Ç–∏!")
            self.talk_with_Tamara("üêü –†—ã–±–∞–∫", "–ß—Ç–æ??")
            self.talk_with_Tamara("üë©‚Äçü¶∞ –¢–∞–º–∞—Ä–∞",
                                  f"–ì—Ä—Ä! –ë–µ—Ä–µ–≥–∏—Å—å –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–∫–µ–∞–Ω–∞, –∏–±–æ –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ {Fore.BLUE}whale{Style.RESET_ALL} —Ä—è–¥–æ–º...")
            self.talk_with_Tamara("üêü –†—ã–±–∞–∫", "–õ–∞–¥–Ω–æ..")
            self.first_meet = True
            self.choose_action()

        if self.dialog == 0 and self.first_meet:
            if self.level > 2 or self.level == 2:
                self.dialog = 1
                self.talk_with_Tamara("üë©‚Äçü¶∞ –¢–∞–º–∞—Ä–∞", "–•–æ-—Ö! –†—ã–±–∞–∫, —è –≤–∏–∂—É —Ç—ã —É–∂–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –º–∞–ª—ã–π!")
                self.talk_with_Tamara("üë©‚Äçü¶∞ –¢–∞–º–∞—Ä–∞", "–®—É—á—É!")
                self.talk_with_Tamara("üë©‚Äçü¶∞ –¢–∞–º–∞—Ä–∞",
                                      f"–ù–æ –µ—Å–ª–∏ —É —Ç–µ–±—è –±—É–¥–µ—Ç {Fore.LIGHTBLACK_EX}3 —à—Ç{Style.RESET_ALL} –ª–∏—à–Ω–µ–π —Ä—ã–±–∫–∏,"
                                      f"\n             —Ç–æ —è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª—é —Ç–µ–±–µ –∫–æ–µ-—á—Ç–æüòã")
                self.talk_with_Tamara("üêü –†—ã–±–∞–∫", "–õ–∞–¥–Ω–æ..")
                self.dialog = 1
                self.choose_action()
        if self.dialog == 1 and self.pozghe != 1:
            print(f"{Fore.RED}–û—Å—Ç–æ—Ä–æ–∂–Ω–æ! –ï—Å–ª–∏ —Ç—ã –≤–º–µ—Å—Ç–æ —Ä—ã–±–∫–∏ –≤–≤–µ–¥–µ—à—å '–ü—Ä–æ–±–µ–ª'\n–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–µ—à—å 'Enter',"
                  f"\n—Ç—ã –ø–æ—Ç–µ—Ä—è–µ—à—å –≤—Å—é —Ä—ã–±—É, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–¥–∞–ª –¢–∞–º–∞—Ä–µ!{Style.RESET_ALL}")
            give_fish = input(f"–•–æ—á–µ—à—å –æ—Ç–¥–∞—Ç—å –¢–∞–º–∞—Ä–µ {Fore.LIGHTBLACK_EX}3 —à—Ç{Style.RESET_ALL} —Ä—ã–±–∫–∏? (–¥–∞/–Ω–µ—Ç) ")
            if give_fish.lower() == '–¥–∞':
                def give_fish():
                    if self.caught_fish:
                        def dec_():
                            for fish in self.caught_fish:
                                print(self.color_fish(fish['name']))

                        dec_()
                        while self.fish_ != 3:
                            try:
                                self.which_fish = input("–ö–∞–∫—É—é –æ—Ç–¥–∞—à—å? ").strip()  # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º
                                if not self.which_fish:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–≤–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É (–µ—Å–ª–∏ self.which_fish –ø—É—Å—Ç–∞—è –∏–ª–∏ None)
                                    print(f"{Fore.YELLOW}–¢—ã –ø–µ—Ä–µ–¥—É–º–∞–ª? –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π!{Style.RESET_ALL}")
                                    self.choose_action()
                                found_fish = next(
                                    (fish for fish in self.caught_fish if fish['name'] == self.which_fish), None)

                                if found_fish:
                                    self.caught_fish.remove(found_fish)
                                    self.fish_ += 1
                                    print(self.caught_fish)
                                else:
                                    print("–û–π! –¢–∞–∫–æ–π —Ä—ã–±–∫–∏ —É —Ç–µ–±—è –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")

                            except Exception as e:
                                print(f"–û—à–∏–±–∫–∞: {e}")

                    if self.fish_ == 3:
                        self.pozghe = 1
                        self.talk_with_Tamara("üë©‚Äçü¶∞ –¢–∞–º–∞—Ä–∞", "–•–æ-—Ö–æ! –†—ã–±–∞–∫, –ø—Ä–∏—Ö–æ–¥–∏ –ø–æ–∑–∂–µ!")
                        self.choose_action()

                give_fish()
        if self.pozghe == 1:
            self.talk_with_Tamara("üë©‚Äçü¶∞ –¢–∞–º–∞—Ä–∞", "–†—ã–±–∞–∫, –∞ –≤–æ—Ç –∏ —Ç–≤–æ–π —Ä—ã–±–Ω—ã–π –ø–∏—Ä–æ–≥ü•ß!")
            self.pie += 1
            print(f"–£ —Ç–µ–±—è –µ—Å—Ç—å {Fore.CYAN}{self.pie}{Style.RESET_ALL} –ø–∏—Ä–æ–≥(–∞/–æ–≤)")
        self.activity()

    def buy_bait(self):
        print("–í–æ—Ç –∫–∞–∫–∏–µ –ø—Ä–∏–º–∞–Ω–∫–∏ –µ—Å—Ç—å —É –°—Ç–µ–ø–∞–Ω–æ–≤–∏—á–∞: ")
        self.bait = {
            1: ("A-—á–µ—Ä–≤—è—á–æ–∫", 20, Fore.GREEN),
            2: ("B-—á–µ—Ä–≤—è—á–æ–∫", 50, Fore.BLUE),
            3: ("C-—á–µ—Ä–≤—è—á–æ–∫", 100, Fore.CYAN),
            4: ("D-—á–µ—Ä–≤—è—á–æ–∫", 250, Fore.MAGENTA),
            5: ("S-—á–µ—Ä–≤—è—á–æ–∫", 470, Fore.RED)
        }

        for key, (name, price, color) in self.bait.items():
            print(f"{key}. {color}{name}{Style.RESET_ALL} - {price} —Ä—É–±")

        def which_f():
            try:
                buy = int(input("–ö–∞–∫—É—é –∫—É–ø–∏—à—å? (–≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä): "))
                if buy in self.bait:
                    name, price, color = self.bait[buy]
                    if int(self.money_in_wallet) < price:
                        print(f"–¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {price - self.money_in_wallet} —Ä—É–±–ª–µ–π!")
                        self.activity()
                    else:
                        self.money_in_wallet -= price
                        self.type_worm = name
                        print(f"–¢—ã –∫—É–ø–∏–ª {color}{name}{Style.RESET_ALL}! –£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {self.money_in_wallet} —Ä—É–±.")
                        self.activity()
                else:
                    print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!")
                    which_f()
            except ValueError:
                print("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ")
                which_f()

        which_f()
        self.activity()

    def buy_boat(self):
        pass
        self.activity()

    def buy_animals(self):
        pass
        self.activity()

    def return_home(self):
        home = AtHome(self.fish_rod, self.fish_count, self.fish_left, self.worm_left,
                      self.money_in_wallet, self.colored_fish_list, self.caught_fish, self.type_worm, self.level,
                      self.cash, self.pie)
        # fish_rod, fish_count, fish_left, worm_left, money, colored_fish_list, caught_fish, type_worm
        home.activation()


class OceanJourney:
    pass


def start():
    if __name__ == '__main__':
        fishing = Fishing(fish_rod="–û–±—ã—á–Ω–∞—è —É–¥–æ—á–∫–∞", money=0, fish_count=3, fish_left=0, worm_left=0,
                          colored_fish_list=[],
                          caught_fish=[{'name': '–±—ã—á–æ–∫', 'price': 40}, {'name': '–±—ã—á–æ–∫', 'price': 40},
                                       {'name': '–∫–∞—Ä–∞—Å–∏–∫', 'price': 50}], type_worm="None", level=2, cash=0, pie=0)
        fishing.list_activity()
        fishing.activation()


# start()

# home = AtHome(inventar=0, caught_fish=[], money=3000, fish_rod="–û–±—ã—á–Ω–∞—è —É–¥–æ—á–∫–∞")
# home.activation()
# moun = Mountains(money=3000, fish_rod="–û–±—ã—á–Ω–∞—è —É–¥–æ—á–∫–∞", fish_left=0, worm_left=0, caught_fish=[])
# moun.message()

fair = Fair(fish_rod="–û–±—ã—á–Ω–∞—è —É–¥–æ—á–∫–∞", fish_count=0, fish_left=0, money_in_wallet=300,
            colored_fish_list=[],
            caught_fish=[{'name': '–±—ã—á–æ–∫', 'price': 40}, {'name': '–±—ã—á–æ–∫', 'price': 40},
                         {'name': '–∫–∞—Ä–∞—Å–∏–∫', 'price': 50}],
            worm_left=0, type_worm='None', level=3, cash=0, pie=0)
fair.activity()
fair.choose_action()

'''–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É:
 "–ø–æ–ª–æ–∂–∏—Ç—å –ø–∏—Ä–æ–≥ –∏ —Ä—ã–±—É –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ + –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç—å 
                –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ä—ã–±–∫—É –∏ –ø–∏—Ä–æ–≥(–∫-–≤–æ)" '''
